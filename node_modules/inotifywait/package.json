{
  "name": "inotifywait",
  "version": "1.7.0",
  "description": "Yet another nodejs fs.watch/inotify implementation. Good for big directories structures and lot of files.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "author": {
    "name": "Stéphane Gully",
    "email": "stephane.gully@gmail.com"
  },
  "license": "BSD",
  "devDependencies": {
    "mocha": "~1.12.0",
    "chai": "~1.7.2",
    "uuid": "~1.4.1",
    "mkdirp": "~0.3.5",
    "remove": "~0.1.5",
    "touch": "0.0.2"
  },
  "dependencies": {
    "lazy": "~1.0.11"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kerphi/node-inotifywait.git"
  },
  "keywords": [
    "watch",
    "inotify",
    "inotifywait",
    "inotifywatch"
  ],
  "bugs": {
    "url": "https://github.com/kerphi/node-inotifywait/issues"
  },
  "readme": "# node-inotifywait\n\nYet another nodejs fs.watch implementation that can watch:\n\n* folders recursively\n* big number of directories and files\n* with low CPU use\n\nThis implementation is a wrapper above the inotifywait system command.\n\n### Why\n\nBecause other implementations:\n* [fs.watch](http://nodejs.org/api/fs.html) \n* [node-watch](https://github.com/yuanchuan/node-watch)\n* [chokidar](https://github.com/paulmillr/chokidar)\n* [watch](https://github.com/mikeal/watch)\n\nAre not performant for huge number of directories and files watching. Some are not recursive, other have high CPU usage when watching lot of directories and files. \n\n### Installation\n\n```bash\nnpm install inotifywait\n```\n\nPrerequisit is to have the `inotifywait` command in the current PATH. On debian/ubuntu, you have to `sudo apt-get install inotify-tools`\n\n### Events\n\n* add (p1 = filename, stats): received when a file or directory is added\n* change (p1 = filename, stats): received when a file is modified\n* unlink (p1 = filename, stats): received when a file or directory is deleted\n* unknown (p1 = filename, p2 = full raw event object, stats): received when unknown action is done on a file or directory\n\n* ready (p1 = unix process object): received when inotifywait is ready to watch files or directories\n* close (no parameter): received when inotifywait exited\n* error (p1 = error object): received when an error occures\n\n`stats` has two properties, `isDir` a Boolean to specify if the event was on a file or a directory and `date` a Date object that\nholds the date of the occured event.\n```\n\n### Example\n\n```js\nvar INotifyWait = require('inotifywait');\n\nvar watch1 = new INotifyWait('/tmp/', { recursive: false });\nwatch1.on('ready', function (filename) {\n  console.log('watcher is watching');\n});\nwatch1.on('add', function (filename) {\n  console.log(filename + ' added');\n  watch1.close(); // stop watching\n});\n\nvar watch2 = new INotifyWait('/var/log/', { recursive: true });\nwatch2.on('change', function (filename) {\n  console.log(filename + ' changed');\n  watch2.close(); // stop watching\n});\n``` \n\n### Contributors\n\n* [Stéphane Gully](https://github.com/kerphi)\n* [Friedel Ziegelmayer](https://github.com/Dignifiedquire)\n",
  "readmeFilename": "README.md",
  "_id": "inotifywait@1.7.0",
  "_from": "inotifywait@"
}
